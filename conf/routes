# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

POST     /api/search                controllers.SearchController.search()
GET      /api/testsearch            controllers.SearchController.testsearch()
POST     /api/testsearch            controllers.SearchController.posttestsearch()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               			controllers.Assets.at(path="/public", file)

# Collection Controller
GET 	 /collection/list						controllers.CollectionController.list(displayName, ownerId, email, 	access: String ?="owned", offset: Integer ?=0, count: Integer ?=10)
POST     /collection/create                     controllers.CollectionController.createCollection()
POST     /collection/listByUser			        controllers.CollectionController.listFirstRecordsOfUserCollections()
POST     /collection/removeRecord               controllers.CollectionController.removeRecordFromCollection
POST     /collection/addRecord                  controllers.CollectionController.addRecordToCollection()
POST     /collection/listRecords   	            controllers.CollectionController.listCollectionRecords()
GET	     /collection/:id 	        			controllers.CollectionController.getCollection(id)
DELETE   /collection/:id	                    controllers.CollectionController.deleteCollection(id)
POST	 /collection/:id 						controllers.CollectionController.editCollection(id)
#GET		 /collection/:id/thumbnail				controllers.CollectionController.getCollectionThumbnail(id)
#GET		 /recordlink/:id/thumbnail				controllers.CollectionController.getRecordLinkThumbnail(id)

# Media Controller
GET 	/media/:id								controllers.MediaController.getMetadataOrFile(id, file: Boolean ?=false) 
POST 	/media/:id 								controllers.MediaController.editMetadataOrFile(id, file: Boolean ?=false) 
DELETE 	/media/:id								controllers.MediaController.deleteMedia(id)

# User Manager Controller
GET 	/user/byEmail							controllers.UserManager.findByEmail(email:java.lang.String)
GET		/user/byDisplayName						controllers.UserManager.findByDisplayName(displayName:java.lang.String)
POST	/user/register							controllers.UserManager.register()
GET		/user/byFacebookId/						controllers.UserManager.findByFacebookId()
GET		/api/login								controllers.UserManager.login(email:java.lang.String?="", password:java.lang.String, displayName:java.lang.String?="" )
GET		/api/logout								controllers.UserManager.logout()

