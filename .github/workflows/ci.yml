name: CI

on:
  push:
    branches:
     - pgeor/citest

jobs:
  build:
    runs-on: [self-hosted]
    env:
      REPOSITORY_URL: with.docker.ails.ece.ntua.gr/with-backend
      CONTAINER_NAME: with-backend
      DEPLOY_USER: deploy
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS:  -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
    
    steps:

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: extract_branch

    - name: Set tag ref
      run: |
        echo TAG_REF=${GITHUB_SHA::8} >> $GITHUB_ENV              

    - name: Set env for development
      if: endsWith(github.ref, '/development')
      run: |
        echo DEPLOY_SERVER=hotwheels.ails.ece.ntua.gr >> $GITHUB_ENV              
    - name: Set env for production
      if: endsWith(github.ref, '/master')
      run: |
        echo DEPLOY_SERVER=lego.ails.ece.ntua.gr >> $GITHUB_ENV              

    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2
        key: ${{ hashFiles('build.sbt') }}

    - name: Setup Scala
      uses: olafurpg/setup-scala@v10
      with:
    
        java-version: "adopt@1.8"
    
    - name: Build app
      run: sbt -v stage   

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Container Registry
      uses: docker/login-action@v1 
      with:
        registry: with.docker.ails.ece.ntua.gr
        username: builder
        password: ${{ secrets.WITH_DOCKER_KEY }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ env.REPOSITORY_URL }}:latest
          ${{ env.REPOSITORY_URL }}:${{ env.TAG_REF }}
          ${{ env.REPOSITORY_URL }}:${{ steps.extract_branch.outputs.branch }}
     

    - name: Deploy to Server
      run: |
        echo "${{ secrets.WITH_CI_SSH_KEY }}" > /tmp/sshkey
        chmod 600 /tmp/sshkey 
        ssh -i /tmp/sshkey -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "cd /etc/docker && DOCKER_CONFIG=~/.docker  /usr/local/bin/docker-compose pull ${CONTAINER_NAME}-${{ steps.extract_branch.outputs.branch }} && /usr/local/bin/docker-compose up -d ${CONTAINER_NAME}-${{ steps.extract_branch.outputs.branch }} "

